services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - airflow
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 30s
      interval: 10s
      retries: 2
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    networks:
      - airflow
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  webserver:
    image: apache/airflow:latest
    ports:
      - "8080:8080"
    entrypoint: ["sh", "-c", "airflow db migrate && airflow webserver"]
    networks:
      - airflow
    volumes:
      - logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./airflow.cfg:/opt/airflow/airflow.cfg
    depends_on:
      - postgres
      - redis

  scheduler:
    image: apache/airflow:latest
    command: ["scheduler"]
    networks:
      - airflow
    volumes:
      - logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./airflow.cfg:/opt/airflow/airflow.cfg
    depends_on:
      - webserver

  worker:
    image: apache/airflow:latest
    command: ["celery", "worker"]
    networks:
      - airflow
    volumes:
      - logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./airflow.cfg:/opt/airflow/airflow.cfg
    depends_on:
      - scheduler

  triggerer:
    image: apache/airflow:latest
    command: ["triggerer"]
    networks:
      - airflow
    volumes:
      - logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./airflow.cfg:/opt/airflow/airflow.cfg
    depends_on:
      - scheduler

volumes:
  logs:

networks:
  airflow:
    driver: bridge
